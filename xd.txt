 Create a Spring Boot REST into the ms-tracking-orders folder, follow the directory structure already implemented.
 It should expose two endpoints under /api/tracking

 1. POST /api/tracking
 - Receives updates from the order-service (open for all)
 - Accepts a JSON body with:
     UUID orderId
     String orderNumber
     UUID userId
     OrderStatusEnum status (PENDING, SHIPPED, DELIVERED, CANCELLED)
     LocalDateTime updatedAt
 - Deserialize into a TrackingStatus object
 - Check if Redis contains the key "tracking:order:{orderNumber}"
     - If it exists, log "Updating tracking status"
     - If not, log "Creating new tracking status"
 - Store the object in Redis using RedisTemplate<String, TrackingStatus>
 - Use a TTL of 1 hour
 - Return HTTP 201 Created

 2. GET /api/tracking/{orderNumber}
 - Returns the tracking status for a given orderNumber
 - Protected using Spring Security OAuth2 (check the ms-auth to understand the security configuration and roles)
 - Extract the authenticated user's userId from the JWT token
 - If the user's role is USER, verify that the order belongs to them by comparing Redis userId
 - If the user's role is ADMIN or ROOT, allow access to any order
 - If the Redis key "tracking:order:{orderNumber}" exists, return the TrackingStatus object
 - If not, return 404 Not Found
 - If the user is not authorized to access the order, return 403 Forbidden
